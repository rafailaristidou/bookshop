/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package secure;
import java.util.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
/**
 *
 * @author Raphael
 */
public class Sales extends javax.swing.JFrame {
        Statement st=null;
        ResultSet rs=null;
        PreparedStatement prs=null;
        Connection conn = MySqlconnect.dbConnection() ;
    /**
     * Creates new form Sales
     */
    public Sales() {
        initComponents();
         sales();
    }
    void sales(){
    try{
        st = conn.createStatement();
        
        String sql=("Select * From Sales ORDER BY sdate DESC");
        rs=st.executeQuery(sql);
        ResultSetMetaData metadata= rs.getMetaData();
        
        int col = metadata.getColumnCount();
        DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
        Vector rows=new Vector();
        Vector columns=new Vector();
        
        for(int i=1; i<= col; i++){
            columns.addElement(metadata.getColumnName(i));
        }
        model.setColumnIdentifiers(columns);
        
        
        while (rs.next()){
        rows =new Vector();
        for (int j=1; j<= col; j++){
        rows.addElement(rs.getString(j));
        } 
        model.addRow(rows);
        }
        jTable1.setModel(model);
    }
        catch (Exception ex){
            System.out.println("exception 2 ");
    }                          
    }            
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        datefrom = new datechooser.beans.DateChooserCombo();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateto = new datechooser.beans.DateChooserCombo();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtrid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setTitle("SALES");

        jButton1.setText("Top 10 Sales");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Last 10 Books Sold ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Find Sales On That Date");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        datefrom.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);

        jLabel1.setText("FROM :");

        jLabel2.setText("TO :");

        dateto.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);

        jButton4.setText("Search By Receipt ID");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Enter Receipt Id");

        txtrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtridActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("SALES DATABASE");

        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datefrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtrid, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(datefrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jLabel2))
                    .addComponent(dateto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(jButton6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelcl = (DefaultTableModel) jTable1.getModel();
        modelcl.setRowCount(0);
        modelcl.setColumnCount(0);
        try{
            st = conn.createStatement();

            String sql=("SELECT s.BOOKID,b.Title, SUM(s.qty) FROM Sales s , Books b where s.BOOKID=b.BOOKID GROUP BY s.BOOKID,b.Title ORDER BY SUM(s.qty) DESC");
            rs=st.executeQuery(sql);
            ResultSetMetaData metadata= rs.getMetaData();

            int col = metadata.getColumnCount();
            DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
            Vector rows=new Vector();
            Vector columns=new Vector();

            for(int i=1; i<= col; i++){
                columns.addElement(metadata.getColumnName(i));
            }
            model.setColumnIdentifiers(columns);

            while (rs.next()){
                rows =new Vector();
                for (int j=1; j<= col; j++){
                    rows.addElement(rs.getString(j));
                }
                model.addRow(rows);
            }
            jTable1.setModel(model);
        }
        catch (Exception ex){
            System.out.println("exception 2 ");
        }

                      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
DefaultTableModel modelcl = (DefaultTableModel) jTable1.getModel();
        modelcl.setRowCount(0);
        modelcl.setColumnCount(0);
        try{
            st = conn.createStatement();

            String sql=("SELECT bookid,title,sdate FROM(Select s.bookid,b.title,s.sdate From sales s Inner Join books b ON s.bookid=b.bookid Order by s.sdate DESC) Where rownum<=10 Order by sdate DESC");
            rs=st.executeQuery(sql);
            ResultSetMetaData metadata= rs.getMetaData();

            int col = metadata.getColumnCount();
            DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
            Vector rows=new Vector();
            Vector columns=new Vector();

            for(int i=1; i<= col; i++){
                columns.addElement(metadata.getColumnName(i));
            }
            model.setColumnIdentifiers(columns);

            while (rs.next()){
                rows =new Vector();
                for (int j=1; j<= col; j++){
                    rows.addElement(rs.getString(j));
                }
                model.addRow(rows);
            }
            jTable1.setModel(model);
        }
        catch (Exception ex){
            System.out.println("exception 2 ");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Calendar from =datefrom.getSelectedDate();//perno tin timi apo ta date chooser combo kai apo object tin metatrepo se date
        Date from1=from.getTime();
        Calendar to =dateto.getSelectedDate();
        Date to1=to.getTime();
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");//kai ta vazo me to sosto format
        String date1 = df.format(from1);
        String date2 = df.format(to1);
        DefaultTableModel modelcl = (DefaultTableModel) jTable1.getModel();
        modelcl.setRowCount(0);
        modelcl.setColumnCount(0);
        try{
            st = conn.createStatement();

            String sql=("SELECT * FROM sales where sdate BETWEEN '"+date1+"' AND '"+date2+"' ORDER BY sdate DESC");
            rs=st.executeQuery(sql);
            ResultSetMetaData metadata= rs.getMetaData();

            int col = metadata.getColumnCount();
            DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
            Vector rows=new Vector();
            Vector columns=new Vector();

            for(int i=1; i<= col; i++){
                columns.addElement(metadata.getColumnName(i));
            }
            model.setColumnIdentifiers(columns);

            while (rs.next()){
                rows =new Vector();
                for (int j=1; j<= col; j++){
                    rows.addElement(rs.getString(j));
                }
                model.addRow(rows);
            }
            jTable1.setModel(model);
        }
        catch (Exception ex){
            System.out.println("exception 2 ");
        }

                                       

   
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelcl = (DefaultTableModel) jTable1.getModel();
        modelcl.setRowCount(0);
        modelcl.setColumnCount(0);
        int rid=Integer.valueOf(txtrid.getText());
        try{
           

            String sql=("SELECT * FROM sales where receiptid = ?");
            prs=conn.prepareStatement(sql);
            prs.setInt(1, rid);
            ResultSet rs = prs.executeQuery();
           
           
            ResultSetMetaData metadata= rs.getMetaData();

            int col = metadata.getColumnCount();
            DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
            Vector rows=new Vector();
            Vector columns=new Vector();

            for(int i=1; i<= col; i++){
                columns.addElement(metadata.getColumnName(i));
            }
            model.setColumnIdentifiers(columns);

            while (rs.next()){
                rows =new Vector();
                for (int j=1; j<= col; j++){
                    rows.addElement(rs.getString(j));
                }
                model.addRow(rows);
            }
            jTable1.setModel(model);
         } catch (Exception ex){
            System.out.println("exception 0 ");
            }
            

    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtridActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelcl = (DefaultTableModel) jTable1.getModel();
        modelcl.setRowCount(0);

        try{
            st = conn.createStatement();

            String sql=("Select * From Sales Order By sdate DESC");
            rs=st.executeQuery(sql);
            ResultSetMetaData metadata= rs.getMetaData();

            int col = metadata.getColumnCount();
            DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
            Vector rows=new Vector();
            Vector columns=new Vector();

            for(int i=1; i<= col; i++){
                columns.addElement(metadata.getColumnName(i));
            }
            model.setColumnIdentifiers(columns);

            while (rs.next()){
                rows =new Vector();
                for (int j=1; j<= col; j++){
                    rows.addElement(rs.getString(j));
                }
                model.addRow(rows);
            }
            jTable1.setModel(model);
        }
        catch (Exception ex){
            System.out.println("exception 2 ");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        int selectedOption = JOptionPane.showConfirmDialog(null,
            "Do You Wanna Delete Selectet Row?",
            "Choose",
            JOptionPane.YES_NO_OPTION);
        if (selectedOption == JOptionPane.YES_OPTION) {
            int rowsel=jTable1.getSelectedRow();
            int rid=Integer.valueOf(jTable1.getValueAt(rowsel,0).toString());
            int bid=Integer.valueOf(jTable1.getValueAt(rowsel,1).toString());
            int returnqty=Integer.valueOf(jTable1.getValueAt(rowsel,2).toString());
            String delete = ("Delete  From Sales Where Receiptid = ? And Bookid = ?");
            int selectedOptionqty = JOptionPane.showConfirmDialog(null,
            "Do You Wanna Return Quanity Back ?",
            "Choose",
            JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_OPTION) {
                addqty(bid,returnqty);
            }
            conn=MySqlconnect.dbConnection();

            try{ 
                prs=conn.prepareStatement(delete);
                prs.setInt(1, rid);
                prs.setInt(2, bid);
                prs.executeUpdate();

            } catch (Exception ex){
                JOptionPane.showMessageDialog(null,"That Sale Dose Not Exist");
    }//GEN-LAST:event_jButton6ActionPerformed
        }}
    void addqty(int n,int a){ 
            
          int q=0;  
            try{
        
        Statement st=null;
        st = conn.createStatement();
        ResultSet rs=null;
        rs=st.executeQuery("select qty from books where bookid='"+n+"'");
      
         while(rs.next()){
            
             
        q=(rs.getInt("QTY"));
         }
        
        try{
            int tq=q+a;
            String upqty=("UPDATE Books SET qty = ? where bookid=?");
            
            prs=conn.prepareStatement(upqty);
            prs.setInt(1, tq);
            prs.setInt(2, n);
            prs.executeUpdate();
       
            

          } catch (Exception ex){
            System.out.println("exception 0 ");
        }

        
        } catch (Exception ex){
            System.out.println("exception 21 ");}
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo datefrom;
    private datechooser.beans.DateChooserCombo dateto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtrid;
    // End of variables declaration//GEN-END:variables
}
